
// Created by Yumi Byakko

// yumibyakko@gmail.com

#include "stdio.h"
#include "stdlib.h"

#define MAXOFSTACK 10

struct stack{
    
    int data[MAXOFSTACK];
    
    int top;
    
};

typedef struct stack st;

int ifStackIsFull(st *myStack){
    
    if (myStack->top == MAXOFSTACK-1){
        
        return 1;
    } else {
        
        return 0;
    }
    
}

int ifStackIsEmpty(st *myStack){
    
    if (myStack->top == -1){
        
        return 1;
    } else {
        
        return 0;
    }    
    
}

void create_emptyStack(st *myStack) {
    
    myStack->top == -1;
}

void pushToStack(st *myStack, int value){
    
    if(ifStackIsFull(myStack)){
        
        printf(" Stack is Full!\n");
        
    }else {
        
        myStack->top++;
        myStack->data[myStack->top] = value;
        
    }
    
}


void popFromStack(st *myStack){
    
    
    if(ifStackIsEmpty(myStack)){
        
        printf(" Stack is Empty!\n");
        
    }else {
        
        printf(" Pop from stack data is: %d\n" , myStack->data[myStack->top]);
        
        myStack->top--;
        
    }
    
}

int main(){
    
    st *myStack = (st *)malloc(sizeof(st));
    
    create_emptyStack(myStack);
    int i=10;
    int y=0;
    
    for(y=0; y< 6; y++){
    
        
    pushToStack(myStack, i);
    
    i++;
    
    }
    
    for(int p =0; p<y ; p++){
        
        popFromStack(myStack);
    }
    
    
    printf(" Number of data in stack is: %d\n", y);
    
    
    return 0;
    
}
